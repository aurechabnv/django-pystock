name: pystock_staging

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:

env:
  ENV_NAME: Staging
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DEBUG: ${{ vars.DEBUG }}
  DATABASE_USERNAME: root
  DATABASE_PASSWORD: testrootpass
  EMAIL_HOST_USER: ${{ vars.EMAIL_HOST_USER }}
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}

jobs:
  pytest:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql
        env:
          # The MySQL docker container requires these environment variables to be set
          # so we can create and migrate the test database.
          # See: https://hub.docker.com/_/mysql
          MYSQL_DATABASE: local_pystock
          MYSQL_ROOT_PASSWORD: testrootpass
        ports:
          # Opens port 3306 on service container and host
          # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
          - 3306:3306
          # Before continuing, verify the mysql container is reachable from the ubuntu host
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev libmysqlclient-dev libgirepository1.0-dev

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run tests with pytest
        run: uv run pytest