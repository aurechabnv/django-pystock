# Generated by Django 5.2 on 2025-06-30 10:34
from django.contrib.auth.management import create_permissions
from django.db import migrations

from apps.account.models import UserRole


def create_default_groups(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    # Permissions have to be created before applying them
    # https://dandavies99.github.io/posts/2021/11/django-permissions/#goal-2-set-up-groups-when-the-project-is-initialised-using-a-data-migration
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, verbosity=0)
        app_config.models_module = None

    if not Group.objects.filter(name=UserRole.EMPLOYEE).exists():
        employee_perms = Permission.objects.filter(codename__in=UserRole.EMPLOYEE_PERMS)
        employee_group = Group.objects.create(name=UserRole.EMPLOYEE)
        employee_group.permissions.set(list(employee_perms))

    if not Group.objects.filter(name=UserRole.MANAGER).exists():
        manager_perms = Permission.objects.filter(codename__in=UserRole.MANAGER_PERMS)
        manager_group = Group.objects.create(name=UserRole.MANAGER)
        manager_group.permissions.set(list(manager_perms))


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0001_initial'),
        ('catalog', '0001_initial'),
        ('inventory', '0001_initial'),
        ('management', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_default_groups)
    ]
